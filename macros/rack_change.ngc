; M6 REMAP Macro for ATC tool change
;
; Assumptions
; Toolnumber is not equal to pocket number
; pocket number  is the discriminating factor for pick up procedure (from rack, from manual position)
; all tools need to be measured 

; Uses global numbered variable #5190 to store the pocket of the tool that gets mounted as a work aorund for the broken handler in linuxcnc tooltable

o<rack_change> sub

;(auto-restore modal settings on return)
M73 
; see MCOde Documentation for testing this
; print to console (if available)
(print, Information from regular LinuxCNC)
(print, tool_in_spindle=#<tool_in_spindle> current_pocket=#<_current_pocket>)
(print, selected_tool=#<_selected_tool> selected_pocket=#<_selected_pocket>)
; we know that current and selected pocket are nonsense (rownumber in tool.tbl)
(print, prep-pocket #<_hal[iocontrol.0.tool-prep-pocket]>)
(print, Global variable 5190: #5190)
#<newtool> = #<_selected_tool>
#<newpocket> = #<_hal[iocontrol.0.tool-prep-pocket]>
#<oldtool> = #<tool_in_spindle>
#<oldpocket> = #5190
#5190 = #<_hal[iocontrol.0.tool-prep-pocket]>
(print, Global variable 5190 after change: #5190)

(print, oldtool #<oldtool>, oldpocket #<oldpocket>)
(print, newtool #<newtool> and newpocket #<newpocket>)

; we must execute this macro only in the milltask interpreter
; or preview will break, so test for '#<_task>' which is 1 for 
; the milltask interpreter and 0 in the UI's
 O100 if [#<_task> EQ 0]
         (print, Task is Null)
 O100     return [999]
 O100 endif

; Ensure everything that we do is done in absolute coordinates
G90
; Cutter comp off, otherwise G53 might go wrong
G40
; Cancel tool offset (not needed until the end)
G49
(print, Moved safe Z)
; First things first, rapid to safe Z
G53 G0 Z[#<_ini[AXIS_Z]MAX_LIMIT>-5]

; First, get rid of the old tool
; check if the spindle is empty by checking if tool_in_spindle GT 0
O200 if [#<tool_in_spindle> GT 0]
    (print, Tool No  #<tool_in_spindle> is in the spindle - we need to put it away)
    ; Check if oldpocket is within range, i.e. GT0, LE _ini[ATC_MISC]POCKETS
    O210 if [#<oldpocket> GT 0]
        O220 if [#<oldpocket> LE #<_ini[ATC]NUMPOCKETS>]
            ;Tool within range, triggering put move to rack, assuming that the pocket is empty!
             (print, Putting tool away into rack in pocket #<oldpocket>)
            ; We are already at safe Z; now rapid to pre position for a specific pocket
            G53 G0 X[#<_ini[ATC]FIRSTPOCKET_X> + [#<oldpocket> -1] * #<_ini[ATC]DELTA_X> - #<_ini[ATC]SAFE_X>] Y[#<_ini[ATC]FIRSTPOCKET_Y> + [#<oldpocket> -1] * #<_ini[ATC]DELTA_Y> - #<_ini[ATC]SAFE_Y>] 
            ; Now put the tool down gently 
            ; first move X
            G53 G01 X[#<_ini[ATC]FIRSTPOCKET_X> + [#<oldpocket> -1] * #<_ini[ATC]DELTA_X>] F#<_ini[ATC]DROPSPEEDXY>
             ; second move Y
            G53 G01 Y[#<_ini[ATC]FIRSTPOCKET_Y> + [#<oldpocket> -1] * #<_ini[ATC]DELTA_Y>] F#<_ini[ATC]DROPSPEEDXY>
            ; third move Z partially rapid
            G53 G01 Z[#<_ini[ATC]SAFEZ>]  F#<_ini[ATC]DROPSPEEDRAPID> 
            G53 G01 Z[#<_ini[ATC]FIRSTPOCKET_Z>]   F#<_ini[ATC]DROPSPEEDZ>
            ; Release the tool from the spindle, immediately turn on pin
            ; This specific machine has a complex behaviour for ATC actuation, since we are dealing with pins and not signals, we need to simulatenously trigger to signals
            ; Motion pins have different behaviour from button pins
            ; TOOL_CLAMP 1; TOOL_RELEASE 1; FLUSH_OFF 1; FLUSH_ON 1
            M64 P #<_ini[ATC_PINS]TOOL_RELEASE>
            M64 P #<_ini[ATC_PINS]FLUSH_ON>
            M64 P #<_ini[ATC_PINS]FLUSH_OFF>
            M64 P #<_ini[ATC_PINS]TOOL_CLAMP>
            G4 P1
            ; Check if Release was ok by watching pin to turn high (L3)
            M66 P #<_ini[ATC_PINS]SENSOR_DRAWBAR> L3 Q #<_ini[ATC]POST_UNLOCK>
            O900 IF [#5399 LT 0]
                 (MSG, Timeout! Drawbar did not unlock - Aborting!)
                 M2
            O900 ENDIF   
            ; Move back to rapid safe Z above the oldpocket
            G53 G01 Z #<_ini[ATC]SAFEZ> F#<_ini[ATC]DROPSPEEDRAPID> 
            ; After this move there should be no tool left; check pin for going LOW L4 
            M66 P #<_ini[ATC_PINS]SENSOR_TOOL> L4 Q #<_ini[ATC]POST_UNLOCK>
            O910 IF [#5399 LT 0]
                 (MSG, Timeout! Tool still in spindle - Aborting!)
                 M2
            O910 ENDIF   
            ; This specific machine has a complex behaviour for ATC actutaion, since we are dealing with pins and not signals, we need to simulatenously trigger to signals
            ; TOOL_CLAMP 1; TOOL_RELEASE 0; FLUSH_OFF 1; FLUSH_ON 0
            M65 P #<_ini[ATC_PINS]TOOL_RELEASE>
            M65 P #<_ini[ATC_PINS]FLUSH_ON>
            M65 P #<_ini[ATC_PINS]FLUSH_OFF>
            M65 P #<_ini[ATC_PINS]TOOL_CLAMP>  
            (print, Tool released and cleared to safe Z)
        O220 else
            ; The tool's pocket number is not within the range of the rack and the tool needs to be removed manually
            ; Tool is still at safe Z height from before
            (print, Pocket is not within range, moving to manual change)
            G53 G0 X #<_ini[ATC]CHANGEX> Y #<_ini[ATC]CHANGEY>
            G53 G0 Z #<_ini[ATC]CHANGEZ>
            ;(MSG, Please remove tool manually from spindle using release button. Afterwards press OK)
            ; Abuse M6 for a dialog with the user by briefly killing the requested tool and replacing it with T0
            T0
            M6
            T#<newtool>
            ; Turn off flush and close drawbar to eliminate noise
            M65 P #<_ini[ATC_PINS]TOOL_RELEASE>
            M65 P #<_ini[ATC_PINS]FLUSH_ON>
            M65 P #<_ini[ATC_PINS]FLUSH_OFF>
            M65 P #<_ini[ATC_PINS]TOOL_CLAMP>
            ; Check if the tool is really gone (LOW)
            M66 P #<_ini[ATC_PINS]SENSOR_TOOL> L4 Q1
            O920 IF [#5399 LT 0]
                (MSG, Error! Tool still in spindle - Aborting!)
                M2
            O920 ENDIF
            (print, done with manual rop off) 
        o220 endif
    
    O990 IF [#5399 LT 0]
        (MSG, Error! Tool still in spindle - Aborting!)
        M2
    O990 ENDIF      
        
    (print,  We are now without a tool at some position either safely above pocket or a change position)

    O210 endif
O200 else
    ; There is nothing to do here but end the if conditional
    (print, There is no tool in the spindle - No action required at this time)
O200 endif
(print, End of Program)
g53 G0 x250y0z0
M6
o<rack_change> endsub [1]
M2